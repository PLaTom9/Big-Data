[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Kierownik\AppData\Local\Temp\idea1.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Kierownik\AppData\Local\Temp\idea1.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Temurin Java 1.8.0_322)
[debug]       Load.loadUnit: plugins took 147.8411ms
[debug]       Load.loadUnit: defsScala took 0.3905ms
[debug] [Loading] Scanning directory C:\Users\Kierownik\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Kierownik\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 25.7101 ms
[debug]           Load.resolveProject(global-plugins) took 94.8989ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Kierownik\.sbt\1.0\plugins, plugins: List(<none>))) took 169.9164ms
[debug] [Loading] Done in C:\Users\Kierownik\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 204.5474ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3437ms
[debug]     Load.loadUnit(file:/C:/Users/Kierownik/.sbt/1.0/plugins/, ...) took 393.7598ms
[debug]   Load.apply: load took 770.0752ms
[debug]   Load.apply: resolveProjects took 15.1348ms
[debug]   Load.apply: finalTransforms took 152.6914ms
[debug]   Load.apply: config.delegates took 11.4626ms
[debug]   Load.apply: Def.make(settings)... took 1111.2253ms
[debug]   Load.apply: structureIndex took 253.0899ms
[debug]   Load.apply: mkStreams took 2.4418ms
[info] loading global plugins from C:\Users\Kierownik\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 5539.9169ms
[debug]           Load.loadUnit: plugins took 57.6923ms
[debug]           Load.loadUnit: defsScala took 0.004ms
[debug] [Loading] Scanning directory D:\Moja edukacja\AGH\Semestr 6\Big Data\lab7\project
[debug]             Load.loadUnit: mkEval took 17.8156ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Moja edukacja\AGH\Semestr 6\Big Data\lab7\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 6.0754 ms
[info] loading settings for project lab7-build from idea1.sbt ...
[debug]               Load.resolveProject(lab7-build) took 11.3854ms
[debug]             Load.loadTransitive: finalizeProject(Project(id lab7-build, base: D:\Moja edukacja\AGH\Semestr 6\Big Data\lab7\project, plugins: List(<none>))) took 18.4953ms
[debug] [Loading] Done in D:\Moja edukacja\AGH\Semestr 6\Big Data\lab7\project, returning: (lab7-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 6179.7865ms
[debug]           Load.loadUnit: cleanEvalClasses took 6.8562ms
[debug]         Load.loadUnit(file:/D:/Moja%20edukacja/AGH/Semestr%206/Big%20Data/lab7/project/, ...) took 6245.5294ms
[debug]       Load.apply: load took 6250.0054ms
[debug]       Load.apply: resolveProjects took 0.1832ms
[debug]       Load.apply: finalTransforms took 64.9453ms
[debug]       Load.apply: config.delegates took 1.7419ms
[debug]       Load.apply: Def.make(settings)... took 419.4661ms
[debug]       Load.apply: structureIndex took 31.935ms
[debug]       Load.apply: mkStreams took 0.0029ms
[info] loading project definition from D:\Moja edukacja\AGH\Semestr 6\Big Data\lab7\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 9091.2284ms
[debug]     Load.loadUnit: defsScala took 0.0035ms
[debug] [Loading] Scanning directory D:\Moja edukacja\AGH\Semestr 6\Big Data\lab7
[debug]       Load.loadUnit: mkEval took 0.339ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Moja edukacja\AGH\Semestr 6\Big Data\lab7, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.0748 ms
[info] loading settings for project lab7 from build.sbt ...
[debug]         Load.resolveProject(lab7) took 39.4401ms
[debug]       Load.loadTransitive: finalizeProject(Project(id lab7, base: D:\Moja edukacja\AGH\Semestr 6\Big Data\lab7, plugins: List(<none>))) took 42.7389ms
[debug] [Loading] Done in D:\Moja edukacja\AGH\Semestr 6\Big Data\lab7, returning: (lab7)
[debug]     Load.loadUnit: loadedProjectsRaw took 1267.9715ms
[debug]     Load.loadUnit: cleanEvalClasses took 9.5661ms
[debug]   Load.loadUnit(file:/D:/Moja%20edukacja/AGH/Semestr%206/Big%20Data/lab7/, ...) took 10369.5837ms
[debug] Load.apply: load took 10372.8267ms
[debug] Load.apply: resolveProjects took 0.1153ms
[debug] Load.apply: finalTransforms took 184.4385ms
[debug] Load.apply: config.delegates took 0.7099ms
[debug] Load.apply: Def.make(settings)... took 112.5537ms
[debug] Load.apply: structureIndex took 21.1795ms
[debug] Load.apply: mkStreams took 0.0026ms
[info] set current project to lab7 (in build file:/D:/Moja%20edukacja/AGH/Semestr%206/Big%20Data/lab7/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 64618 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 64618, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to lab7 (in build file:/D:/Moja%20edukacja/AGH/Semestr%206/Big%20Data/lab7/)
[debug] > Exec(idea-shell, None, None)
